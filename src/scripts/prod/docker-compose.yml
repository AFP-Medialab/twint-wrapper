version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch
    restart: on-failure
    environment:
      - node.name=elasticsearch
      - discovery.seed_hosts=elasticsearch2
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch2
    environment:
      - node.name=elasticsearch2
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet
  
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: on-failure
    environment:
        MYSQL_ROOT_PASSWORD: devpass123
        MYSQL_USER: dev1
        MYSQL_PASSWORD: dev1
        MYSQL_DATABASE: twint-wrapper
    container_name: mysql
    volumes:
      - mysqldata1:/usr/share/mysql/data
    ports:
      - 3308:3306
    networks:
      - esnet
      
  twint-gateway:
    image: medialab.registry.afp.com/twint-wrapper:1.0.2
    container_name: twint-wrapper
    restart: on-failure
    depends_on:
      - mysql
    networks:
      - esnet
    ports:
      - 8081:8080
    expose:
      - 8081
    environment:
      MYSQL_URL: "jdbc:mysql://mysql:3306/twint-wrapper?serverTimeZone=CET&useSSL=false"
      ES_URL: elasticsearch:9200
      ES_HOST: elasticsearch
volumes:
  esdata1: {}
  esdata2: {}  
  mysqldata1: {}
networks:
  esnet:
  